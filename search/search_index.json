{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"account/apikeys/","text":"","title":"API Keys"},{"location":"account/billing/","text":"","title":"Billing & Plans"},{"location":"account/contact/","text":"","title":"Contact"},{"location":"account/password/","text":"","title":"Password Reset"},{"location":"account/security/","text":"","title":"Security"},{"location":"account/support/","text":"","title":"Support"},{"location":"api/introduction/","text":"","title":"Machinable API"},{"location":"getting_started/","text":"Welcome to Machinable! Machinable gives developers the ability to create API Resources and Collections to store data in a structured, validated, RESTful way without having to write any backend code. Features API Resources API Resources are defined endpoints that store structured data which is validated on creation based on the JSON Schema that describes your application's data. Collections Collections are lists of unstructured data. Store any JSON object in your collections without having to rely on data validation. User/API Key Access Create API Keys to manage your project data and allow users to register to your project. Users then have access to API Resource and Collection data based on authorization policies that you configure. Goal The goal of Machinable is to provide developers an abstraction to their project's CRUD HTTP APIs. This let's you focus on the important parts of your project; User experience and business logic. With Machinable's combination of CRUD interfaces , Webhooks (TODO), and Websockets (TODO), developers can quickly develop prototypes or even full scale production applications. See our list of open source sample applications built on Machinable.","title":"Machinable"},{"location":"getting_started/#welcome-to-machinable","text":"Machinable gives developers the ability to create API Resources and Collections to store data in a structured, validated, RESTful way without having to write any backend code.","title":"Welcome to Machinable!"},{"location":"getting_started/#features","text":"","title":"Features"},{"location":"getting_started/#api-resources","text":"API Resources are defined endpoints that store structured data which is validated on creation based on the JSON Schema that describes your application's data.","title":"API Resources"},{"location":"getting_started/#collections","text":"Collections are lists of unstructured data. Store any JSON object in your collections without having to rely on data validation.","title":"Collections"},{"location":"getting_started/#userapi-key-access","text":"Create API Keys to manage your project data and allow users to register to your project. Users then have access to API Resource and Collection data based on authorization policies that you configure.","title":"User/API Key Access"},{"location":"getting_started/#goal","text":"The goal of Machinable is to provide developers an abstraction to their project's CRUD HTTP APIs. This let's you focus on the important parts of your project; User experience and business logic. With Machinable's combination of CRUD interfaces , Webhooks (TODO), and Websockets (TODO), developers can quickly develop prototypes or even full scale production applications. See our list of open source sample applications built on Machinable.","title":"Goal"},{"location":"getting_started/about/","text":"Machinable is a project maintained by Nick Sjostrom.","title":"About"},{"location":"getting_started/getting_started/","text":"Register Navigate to https://machinable.io and register for an account. This will require a valid email address. Confirm your email by following the link in your inbox. You will then be able to login to Machinable and start managing your projects! Create A Project After logging in for the first time you will see a fairly empty screen which invites you to create a new project. Click the 'Create A Project' button to get started. Provide the necessary information for your project: Project Icon Select from multiple icons. This can help identify your project in the list. Name The short, but descriptive, name of your project. Slug This is the subdomain that will be given to your project in the form of https://{project_slug}.machinable.io . Description A longer description of your project. What are you using this project for? Are there any relevant links that this project should reference? Etc. Authentication Required This specifies if User/API Key authentication will be required to access the API Resource and Collection data stored for this project. If this is disabled, anyone with your project links can access the data. This can be changed at any time . Once you have filled out the form, click 'Create'. Your project is now ready to use! What's Next? Create an API Resource Manage Collections Create and query some data Create an application that uses your Machinable project","title":"Getting Started"},{"location":"getting_started/getting_started/#register","text":"Navigate to https://machinable.io and register for an account. This will require a valid email address.","title":"Register"},{"location":"getting_started/getting_started/#create-a-project","text":"After logging in for the first time you will see a fairly empty screen which invites you to create a new project. Click the 'Create A Project' button to get started.","title":"Create A Project"},{"location":"getting_started/getting_started/#whats-next","text":"Create an API Resource Manage Collections Create and query some data Create an application that uses your Machinable project","title":"What's Next?"},{"location":"getting_started/release_notes_api/","text":"Changelog 0.8.0 Support ReCaptcha on register Misc. additions to slug blacklist","title":"Machinable API"},{"location":"getting_started/release_notes_api/#changelog","text":"","title":"Changelog"},{"location":"getting_started/release_notes_api/#080","text":"Support ReCaptcha on register Misc. additions to slug blacklist","title":"0.8.0"},{"location":"getting_started/release_notes_ui/","text":"Changelog 0.6.1 Add ReCaptcha on register page Fix docker build Dummy user settings screens Re-style home/projects page","title":"Machinable UI"},{"location":"getting_started/release_notes_ui/#changelog","text":"","title":"Changelog"},{"location":"getting_started/release_notes_ui/#061","text":"Add ReCaptcha on register page Fix docker build Dummy user settings screens Re-style home/projects page","title":"0.6.1"},{"location":"projects/access/","text":"Access Users API Keys","title":"Access"},{"location":"projects/access/#access","text":"","title":"Access"},{"location":"projects/access/#users","text":"","title":"Users"},{"location":"projects/access/#api-keys","text":"","title":"API Keys"},{"location":"projects/collections/","text":"Collections Manage Collections Querying Data Configure Access","title":"Collections"},{"location":"projects/collections/#collections","text":"","title":"Collections"},{"location":"projects/collections/#manage-collections","text":"","title":"Manage Collections"},{"location":"projects/collections/#querying-data","text":"","title":"Querying Data"},{"location":"projects/collections/#configure-access","text":"","title":"Configure Access"},{"location":"projects/resources/","text":"API Resources Manage Resources Querying Data Configure Access","title":"API Resources"},{"location":"projects/resources/#api-resources","text":"","title":"API Resources"},{"location":"projects/resources/#manage-resources","text":"","title":"Manage Resources"},{"location":"projects/resources/#querying-data","text":"","title":"Querying Data"},{"location":"projects/resources/#configure-access","text":"","title":"Configure Access"},{"location":"projects/security/","text":"Security Logs Sessions","title":"Security"},{"location":"projects/security/#security","text":"","title":"Security"},{"location":"projects/security/#logs","text":"","title":"Logs"},{"location":"projects/security/#sessions","text":"","title":"Sessions"},{"location":"projects/settings/","text":"","title":"Settings"},{"location":"querying_data/crud/","text":"","title":"CRUD"},{"location":"querying_data/filtering/","text":"","title":"Filtering"},{"location":"querying_data/pagination/","text":"","title":"Pagination"},{"location":"reference/json_schema/","text":"JSON Schema Machinable API Resource properties are defined with JSON Schema. This section provides helpful information and quick links on the topic of JSON Schema. JSON Schema is a vocabulary that allows you to annotate and validate JSON documents. Understanding JSON Schema is a great reference for those that want to understand the basics of JSON Schema, without diving into the technical specification. For more information about the JSON Schema specification, refer to https://json-schema.org . Examples These examples are meant to give you a high level idea of how to structure your data types in Machinable. Person Schema { \"firstName\": { \"type\": \"string\", \"description\": \"The person's first name.\" }, \"lastName\": { \"type\": \"string\", \"description\": \"The person's last name.\" }, \"age\": { \"description\": \"Age in years which must be equal to or greater than zero.\", \"type\": \"integer\", \"minimum\": 0 }, \"birthDate\": { \"description\": \"The date of this person's birth, represented by a RFC3339 formated date-time string\", \"format\": \"date-time\", \"type\": \"string\" }, \"friends\": { \"description\": \"A list of this person's friends\", \"items\": { \"type\": \"string\" }, \"type\": \"array\" }, \"profession\": { \"description\": \"The profession of this person. What they do for a career or their lifestyle.\", \"type\": \"object\", \"properties\": { \"title\": { \"type\": \"string\" }, \"years\": { \"type\": \"number\", \"description\": \"The number of years this person has spent with this profession\" }, \"responsibilites\": { \"description\": \"A list of this profession's responsibilities\", \"items\": { \"type\": \"string\" }, \"type\": \"array\" } } } } Person sample data: { \"firstName\": \"Jonathan\", \"lastName\": \"Gilmore\", \"age\": 29, \"birthDate\": \"1989-07-20T04:00:00Z\", \"friends\": [ \"Renee Scott\", \"Mrs. Brenda Harris\", \"Charles Miller\", \"Marc Webb\" ], \"profession\": { \"title\": \"Lumberjack\", \"years\": 10.5, \"responsibilites\": [ \"North American workers in the logging industry who perform the initial harvesting and transport of trees for ultimate processing into forest products.\" ] } }","title":"JSON Schema"},{"location":"reference/json_schema/#json-schema","text":"Machinable API Resource properties are defined with JSON Schema. This section provides helpful information and quick links on the topic of JSON Schema. JSON Schema is a vocabulary that allows you to annotate and validate JSON documents. Understanding JSON Schema is a great reference for those that want to understand the basics of JSON Schema, without diving into the technical specification. For more information about the JSON Schema specification, refer to https://json-schema.org .","title":"JSON Schema"},{"location":"reference/json_schema/#examples","text":"These examples are meant to give you a high level idea of how to structure your data types in Machinable.","title":"Examples"},{"location":"reference/json_schema/#person-schema","text":"{ \"firstName\": { \"type\": \"string\", \"description\": \"The person's first name.\" }, \"lastName\": { \"type\": \"string\", \"description\": \"The person's last name.\" }, \"age\": { \"description\": \"Age in years which must be equal to or greater than zero.\", \"type\": \"integer\", \"minimum\": 0 }, \"birthDate\": { \"description\": \"The date of this person's birth, represented by a RFC3339 formated date-time string\", \"format\": \"date-time\", \"type\": \"string\" }, \"friends\": { \"description\": \"A list of this person's friends\", \"items\": { \"type\": \"string\" }, \"type\": \"array\" }, \"profession\": { \"description\": \"The profession of this person. What they do for a career or their lifestyle.\", \"type\": \"object\", \"properties\": { \"title\": { \"type\": \"string\" }, \"years\": { \"type\": \"number\", \"description\": \"The number of years this person has spent with this profession\" }, \"responsibilites\": { \"description\": \"A list of this profession's responsibilities\", \"items\": { \"type\": \"string\" }, \"type\": \"array\" } } } } Person sample data: { \"firstName\": \"Jonathan\", \"lastName\": \"Gilmore\", \"age\": 29, \"birthDate\": \"1989-07-20T04:00:00Z\", \"friends\": [ \"Renee Scott\", \"Mrs. Brenda Harris\", \"Charles Miller\", \"Marc Webb\" ], \"profession\": { \"title\": \"Lumberjack\", \"years\": 10.5, \"responsibilites\": [ \"North American workers in the logging industry who perform the initial harvesting and transport of trees for ultimate processing into forest products.\" ] } }","title":"Person Schema"},{"location":"reference/sample_projects/","text":"","title":"Sample Projects"}]}
{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Machinable!\n\n\nMachinable gives developers the ability to create API Resources and Collections to store data in a structured, validated, RESTful way without having to write any backend code.", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-machinable", 
            "text": "Machinable gives developers the ability to create API Resources and Collections to store data in a structured, validated, RESTful way without having to write any backend code.", 
            "title": "Welcome to Machinable!"
        }, 
        {
            "location": "/projects/resources/", 
            "text": "About\n\n\nManage Resources\n\n\nQuerying Data\n\n\nConfigure Access", 
            "title": "API Resources"
        }, 
        {
            "location": "/projects/resources/#about", 
            "text": "", 
            "title": "About"
        }, 
        {
            "location": "/projects/resources/#manage-resources", 
            "text": "", 
            "title": "Manage Resources"
        }, 
        {
            "location": "/projects/resources/#querying-data", 
            "text": "", 
            "title": "Querying Data"
        }, 
        {
            "location": "/projects/resources/#configure-access", 
            "text": "", 
            "title": "Configure Access"
        }, 
        {
            "location": "/projects/collections/", 
            "text": "About\n\n\nManage Collections\n\n\nQuerying Data\n\n\nConfigure Access", 
            "title": "Collections"
        }, 
        {
            "location": "/projects/collections/#about", 
            "text": "", 
            "title": "About"
        }, 
        {
            "location": "/projects/collections/#manage-collections", 
            "text": "", 
            "title": "Manage Collections"
        }, 
        {
            "location": "/projects/collections/#querying-data", 
            "text": "", 
            "title": "Querying Data"
        }, 
        {
            "location": "/projects/collections/#configure-access", 
            "text": "", 
            "title": "Configure Access"
        }, 
        {
            "location": "/projects/access/", 
            "text": "About\n\n\nUsers\n\n\nAPI Keys", 
            "title": "Access"
        }, 
        {
            "location": "/projects/access/#about", 
            "text": "", 
            "title": "About"
        }, 
        {
            "location": "/projects/access/#users", 
            "text": "", 
            "title": "Users"
        }, 
        {
            "location": "/projects/access/#api-keys", 
            "text": "", 
            "title": "API Keys"
        }, 
        {
            "location": "/projects/security/", 
            "text": "About\n\n\nLogs\n\n\nSessions", 
            "title": "Security"
        }, 
        {
            "location": "/projects/security/#about", 
            "text": "", 
            "title": "About"
        }, 
        {
            "location": "/projects/security/#logs", 
            "text": "", 
            "title": "Logs"
        }, 
        {
            "location": "/projects/security/#sessions", 
            "text": "", 
            "title": "Sessions"
        }, 
        {
            "location": "/reference/", 
            "text": "JSON Schema\n\n\nMachinable API Resource properties are defined with JSON Schema. This section provides helpful information and quick links on the topic of JSON Schema.\n\n\nJSON Schema is a vocabulary that allows you to annotate and validate JSON documents. \nUnderstanding JSON Schema\n is a great reference for those that want to understand the basics of JSON Schema, without diving into the technical specification.\n\n\nFor more information about the JSON Schema specification, refer to \nhttps://json-schema.org\n.\n\n\nExamples\n\n\nThese examples are meant to give you a high level idea of how to structure your data types in Machinable.\n\n\nPerson Schema:\n\n\n{\n    \nfirstName\n: {\n        \ntype\n: \nstring\n,\n        \ndescription\n: \nThe person's first name.\n\n    },\n    \nlastName\n: {\n        \ntype\n: \nstring\n,\n        \ndescription\n: \nThe person's last name.\n\n    },\n    \nage\n: {\n        \ndescription\n: \nAge in years which must be equal to or greater than zero.\n,\n        \ntype\n: \ninteger\n,\n        \nminimum\n: 0\n    },\n    \nbirthDate\n: {\n        \ndescription\n: \nThe date of this person's birth, represented by a RFC3339 formated date-time string\n,\n        \nformat\n: \ndate-time\n,\n        \ntype\n: \nstring\n\n    },\n    \nfriends\n: {\n        \ndescription\n: \nA list of this person's friends\n,\n        \nitems\n: {\n            \ntype\n: \nstring\n\n        },\n        \ntype\n: \narray\n\n    },\n    \nprofession\n: {\n        \ndescription\n: \nThe profession of this person. What they do for a career or their lifestyle.\n,\n        \ntype\n: \nobject\n,\n        \nproperties\n: {\n            \ntitle\n: {\n                \ntype\n: \nstring\n\n            },\n            \nyears\n: {\n                \ntype\n: \nnumber\n,\n                \ndescription\n: \nThe number of years this person has spent with this profession\n\n            },\n            \nresponsibilites\n: {\n                \ndescription\n: \nA list of this profession's responsibilities\n,\n                \nitems\n: {\n                    \ntype\n: \nstring\n\n                },\n                \ntype\n: \narray\n\n            }\n        }\n    }\n}\n\n\n\n\nPerson sample datum:\n\n\n{\n    \nfirstName\n: \nJonathan\n,\n    \nlastName\n: \nGilmore\n,\n    \nage\n: 29,\n    \nbirthDate\n: \n1989-07-20T04:00:00Z\n,\n    \nfriends\n: [\n        \nRenee Scott\n,\n        \nMrs. Brenda Harris\n,\n        \nCharles Miller\n,\n        \nMarc Webb\n\n    ],\n    \nprofession\n: {\n        \ntitle\n: \nLumberjack\n,\n        \nyears\n: 10.5,\n        \nresponsibilites\n: [\n            \nNorth American workers in the logging industry who perform the initial harvesting and transport of trees for ultimate processing into forest products.\n\n        ]\n    }\n}", 
            "title": "Reference"
        }, 
        {
            "location": "/reference/#json-schema", 
            "text": "Machinable API Resource properties are defined with JSON Schema. This section provides helpful information and quick links on the topic of JSON Schema.  JSON Schema is a vocabulary that allows you to annotate and validate JSON documents.  Understanding JSON Schema  is a great reference for those that want to understand the basics of JSON Schema, without diving into the technical specification.  For more information about the JSON Schema specification, refer to  https://json-schema.org .  Examples  These examples are meant to give you a high level idea of how to structure your data types in Machinable.  Person Schema:  {\n     firstName : {\n         type :  string ,\n         description :  The person's first name. \n    },\n     lastName : {\n         type :  string ,\n         description :  The person's last name. \n    },\n     age : {\n         description :  Age in years which must be equal to or greater than zero. ,\n         type :  integer ,\n         minimum : 0\n    },\n     birthDate : {\n         description :  The date of this person's birth, represented by a RFC3339 formated date-time string ,\n         format :  date-time ,\n         type :  string \n    },\n     friends : {\n         description :  A list of this person's friends ,\n         items : {\n             type :  string \n        },\n         type :  array \n    },\n     profession : {\n         description :  The profession of this person. What they do for a career or their lifestyle. ,\n         type :  object ,\n         properties : {\n             title : {\n                 type :  string \n            },\n             years : {\n                 type :  number ,\n                 description :  The number of years this person has spent with this profession \n            },\n             responsibilites : {\n                 description :  A list of this profession's responsibilities ,\n                 items : {\n                     type :  string \n                },\n                 type :  array \n            }\n        }\n    }\n}  Person sample datum:  {\n     firstName :  Jonathan ,\n     lastName :  Gilmore ,\n     age : 29,\n     birthDate :  1989-07-20T04:00:00Z ,\n     friends : [\n         Renee Scott ,\n         Mrs. Brenda Harris ,\n         Charles Miller ,\n         Marc Webb \n    ],\n     profession : {\n         title :  Lumberjack ,\n         years : 10.5,\n         responsibilites : [\n             North American workers in the logging industry who perform the initial harvesting and transport of trees for ultimate processing into forest products. \n        ]\n    }\n}", 
            "title": "JSON Schema"
        }, 
        {
            "location": "/about/", 
            "text": "Machinable is a project maintained by Nick Sjostrom.", 
            "title": "About"
        }
    ]
}